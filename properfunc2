pipeline {
  agent any
  parameters {
    string(description: 'enter ami_id', name: 'AMI_ID', defaultValue: 'ami-0ad42f4f66f6c1cc9')
    string(description: 'enter subnet id', name: 'SUBNET', defaultValue: 'subnet-0b57a25fd5a0448d0')
    string(description: 'enter region name', name: 'REGION', defaultValue: 'ap-south-1')
    string(description: 'enter Key name', name: 'NAME', defaultValue: 'Name')
    string(description: 'enter Key-value-name', name: 'NAME_VALUE', defaultValue: '')
    string(description: 'enter number of instances to launch', name: 'Number_Of_Instances', defaultValue: '1')
    string(description: 'enter security-group-id', name: 'SECURITY_GROUP_ID', defaultValue: 'sg-088974251af4f8415')
    choice(choices: ['CI_VPC', 'test1'], description: 'choose key pair?', name: 'KEYPAIR')
    choice(choices: ['t2.micro', 't2.medium', 't2.large', 't2.xlarge', 't2.2xlarge'], description: 'choose the type of Instance', name: 'INSTANCE_TYPE' ) 
    
  }
     
  stages {
    stage('build') {
      steps {
      
        withCredentials([[
          $class: 'AmazonWebServicesCredentialsBinding',
          credentialsId: 'aws-access',
         // credentialsId: 'aws key',
          accessKeyVariable: 'AWS_ACCESS_KEY_ID',
          secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
        ]])
        {
       
       git url: 'https://github.com/usman6745/client-aws-instance-launch1.git'
          sh '''
          chmod +x properfunc.sh
            ./properfunc.sh $AMI_ID $SUBNET $REGION $NAME $NAME_VALUE $Number_Of_Instances $SECURITY_GROUP_ID $KEYPAIR $INSTANCE_TYPE
        ''' 
       
         
}
}   
}

stage('slacknotification') {
steps{    
  script {
    def my_id = ''
    def my_id2 = ''
dir ('/var/lib/jenkins/workspace/Jenkins-EC2-Launch'){
my_id = sh(script:"head -1 InstanceId", returnStdout: true)
my_id2 = sh(script:"head -1 KeyName", returnStdout: true)
echo "${my_id}"
echo "${my_id2}"
}
echo "${my_id}"
echo "${my_id2}"

//slackSend baseUrl: 'https://opstree.slack.com/services/hooks/jenkins-ci/',
//channel: '#pradeep', color: 'good', message: 'hello', teamDomain: 'opstree', tokenCredentialId: 'slack-jenkins

slackSend baseUrl: 'https://opstree.slack.com/services/hooks/jenkins-ci/',
 //channel: '#ec2-test',
 //channel: 'ot-meesho',
 channel: '#pradeep',
 color: 'good',
 message: 'Jenkins-Slack Intigrated Instance-id is Launched - The Instance ID is ' + my_id + my_id2,
 teamDomain: 'opstree',
 //tokenCredentialId: 'slack-token-ec2-test'
 //tokenCredentialId: 'slack-token'
 tokenCredentialId: 'slack-jenkins'
 }
 }
 }
 }
}
